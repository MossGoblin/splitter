[INFO ] START
[INFO ] Reading network from .graph file
[DEBUG] The graph is valid
[INFO ] Creating distance map
[DEBUG] Adding node [e] to distance graph
[DEBUG] *   Declaring [e]
[DEBUG] *   Adding nbrs of [e]
[DEBUG]     -   Nbr a added
[DEBUG]     -   Nbr b added
[DEBUG]     -   Nbr c added
[DEBUG] *   Adding nbrs of [e]
[DEBUG]     *   No distances to adjust for [e]
[DEBUG]     *   Checking distances between old nodes through [e]
[DEBUG] Adding node [c] to distance graph
[DEBUG] *   Declaring [c]
[DEBUG] *   Adding nbrs of [c]
[DEBUG]     -   Nbr a added
[DEBUG]     -   Nbr d added
[DEBUG]     -   Nbr e added
[DEBUG]     -   Nbr b added
[DEBUG] *   Adding nbrs of [c]
[DEBUG]     *   Checking distances between old nodes through [c]
[DEBUG] Adding node [d] to distance graph
[DEBUG] *   Declaring [d]
[DEBUG] *   Adding nbrs of [d]
[DEBUG]     -   Nbr c added
[DEBUG] *   Adding nbrs of [d]
[DEBUG]     *   Distance between [d] and [e] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [d]
[DEBUG] Adding node [b] to distance graph
[DEBUG] *   Declaring [b]
[DEBUG] *   Adding nbrs of [b]
[DEBUG]     -   Nbr c added
[DEBUG]     -   Nbr e added
[DEBUG] *   Adding nbrs of [b]
[DEBUG]     *   Distance between [b] and [d] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [b]
[DEBUG] Adding node [a] to distance graph
[DEBUG] *   Declaring [a]
[DEBUG] *   Adding nbrs of [a]
[DEBUG]     -   Nbr c added
[DEBUG]     -   Nbr e added
[DEBUG] *   Adding nbrs of [a]
[DEBUG]     *   Distance between [a] and [d] recorded as 2
[DEBUG]     *   Distance between [a] and [b] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [a]
[DEBUG] 
== Distance Map ==
[DEBUG] [e]:
[DEBUG]     e : 0
[DEBUG]     a : 1
[DEBUG]     b : 1
[DEBUG]     c : 1
[DEBUG]     d : 2
[DEBUG] 
[DEBUG] [c]:
[DEBUG]     c : 0
[DEBUG]     a : 1
[DEBUG]     d : 1
[DEBUG]     e : 1
[DEBUG]     b : 1
[DEBUG] 
[DEBUG] [d]:
[DEBUG]     d : 0
[DEBUG]     c : 1
[DEBUG]     e : 2
[DEBUG]     b : 2
[DEBUG]     a : 2
[DEBUG] 
[DEBUG] [b]:
[DEBUG]     b : 0
[DEBUG]     c : 1
[DEBUG]     e : 1
[DEBUG]     d : 2
[DEBUG]     a : 2
[DEBUG] 
[DEBUG] [a]:
[DEBUG]     a : 0
[DEBUG]     c : 1
[DEBUG]     e : 1
[DEBUG]     d : 2
[DEBUG]     b : 2
[DEBUG] 
[INFO ] .. Distance distrubution built
[DEBUG] {"0": [["e", "e"], ["c", "c"], ["d", "d"], ["b", "b"], ["a", "a"]], "1": [["a", "e"], ["b", "e"], ["c", "e"], ["a", "c"], ["c", "d"], ["b", "c"]], "2": [["d", "e"], ["b", "d"], ["a", "d"], ["a", "b"]]}
[DEBUG] SIFTING for 3 peripherals at cut off 1
[INFO ] .. Periferals found
[DEBUG] ['a', 'b', 'd']
[INFO ] Starting split network creep
[DEBUG] Tick [ 1 ]
[DEBUG] Split a at 0
[DEBUG] Split b at 0
[DEBUG] Split d at -1
[DEBUG] -   a checks c
[DEBUG] -   a checks e
[DEBUG] -   b checks c
[DEBUG] -   b checks e
[DEBUG] -   d checks c
[DEBUG] Tick [ 2 ]
[DEBUG] Split a at 1
[DEBUG] Split b at 1
[DEBUG] Split d at 0
[DEBUG] -   a checks c
[DEBUG] -   a checks e
[DEBUG] -   b checks c
[DEBUG] -   b checks e
[DEBUG] -   d checks c
[DEBUG] Tick [ 3 ]
[DEBUG] Split a at 2
[DEBUG] Split b at 2
[DEBUG] Split d at 1
[DEBUG] -   a checks c
[DEBUG] -   a checks e
[DEBUG] -   b checks c
[DEBUG] -   b checks e
[DEBUG] -   d checks c
[DEBUG] Tick [ 4 ]
[DEBUG] Split a at 3
[DEBUG] Split b at 3
[DEBUG] Split d at 2
[DEBUG] -   a checks c
[DEBUG] a ADDS c
[DEBUG] -   a checks e
[DEBUG] -   b checks c
[DEBUG]  -   already claimed
[DEBUG] -   b checks e
[DEBUG] b ADDS e
[DEBUG] -   d checks c
[DEBUG]  -   already claimed
[DEBUG] a > 5 > ['a', 'c']
[DEBUG] b > 5 > ['b', 'e']
[DEBUG] d > 2 > ['d']
[INFO ] Creating border map

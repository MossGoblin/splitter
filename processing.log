[INFO ] START
[INFO ] Reading network from .graph file
[DEBUG] The graph is valid
[INFO ] .. Graph total: 12
[INFO ] .. Graph mean deviation: 0.0
[INFO ] Creating distance map
[DEBUG] Adding node [a] to distance graph
[DEBUG] *   Declaring [a]
[DEBUG] *   Adding nbrs of [a]
[DEBUG]     -   Nbr b added
[DEBUG]     -   Nbr d added
[DEBUG] *   Adding nbrs of [a]
[DEBUG]     *   No distances to adjust for [a]
[DEBUG]     *   Checking distances between old nodes through [a]
[DEBUG] Adding node [d] to distance graph
[DEBUG] *   Declaring [d]
[DEBUG] *   Adding nbrs of [d]
[DEBUG]     -   Nbr a added
[DEBUG]     -   Nbr b added
[DEBUG]     -   Nbr e added
[DEBUG]     -   Nbr f added
[DEBUG] *   Adding nbrs of [d]
[DEBUG]     *   Checking distances between old nodes through [d]
[DEBUG] Adding node [f] to distance graph
[DEBUG] *   Declaring [f]
[DEBUG] *   Adding nbrs of [f]
[DEBUG]     -   Nbr d added
[DEBUG]     -   Nbr e added
[DEBUG]     -   Nbr g added
[DEBUG] *   Adding nbrs of [f]
[DEBUG]     *   Distance between [f] and [a] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [f]
[DEBUG] Adding node [g] to distance graph
[DEBUG] *   Declaring [g]
[DEBUG] *   Adding nbrs of [g]
[DEBUG]     -   Nbr e added
[DEBUG]     -   Nbr f added
[DEBUG] *   Adding nbrs of [g]
[DEBUG]     *   Distance between [g] and [a] recorded as 3
[DEBUG]     *   Distance between [g] and [d] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [g]
[DEBUG] Adding node [e] to distance graph
[DEBUG] *   Declaring [e]
[DEBUG] *   Adding nbrs of [e]
[DEBUG]     -   Nbr f added
[DEBUG]     -   Nbr b added
[DEBUG]     -   Nbr d added
[DEBUG]     -   Nbr g added
[DEBUG]     -   Nbr c added
[DEBUG] *   Adding nbrs of [e]
[DEBUG]     *   Distance between [e] and [a] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [e]
[DEBUG] Adding node [c] to distance graph
[DEBUG] *   Declaring [c]
[DEBUG] *   Adding nbrs of [c]
[DEBUG]     -   Nbr b added
[DEBUG]     -   Nbr e added
[DEBUG] *   Adding nbrs of [c]
[DEBUG]     *   Distance between [c] and [a] recorded as 3
[DEBUG]     *   Distance between [c] and [d] recorded as 2
[DEBUG]     *   Distance between [c] and [f] recorded as 2
[DEBUG]     *   Distance between [c] and [g] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [c]
[DEBUG] Adding node [b] to distance graph
[DEBUG] *   Declaring [b]
[DEBUG] *   Adding nbrs of [b]
[DEBUG]     -   Nbr c added
[DEBUG]     -   Nbr a added
[DEBUG]     -   Nbr e added
[DEBUG]     -   Nbr d added
[DEBUG] *   Adding nbrs of [b]
[DEBUG]     *   Distance between [b] and [f] recorded as 2
[DEBUG]     *   Distance between [b] and [g] recorded as 2
[DEBUG]     *   Checking distances between old nodes through [b]
[DEBUG]       *   Distance between [a] and [c] adjusted to 2
[DEBUG] 
== Distance Map ==
[DEBUG] [a]:
[DEBUG]     a : 0
[DEBUG]     b : 1
[DEBUG]     d : 1
[DEBUG]     f : 2
[DEBUG]     g : 3
[DEBUG]     e : 2
[DEBUG]     c : 2
[DEBUG] 
[DEBUG] [d]:
[DEBUG]     d : 0
[DEBUG]     a : 1
[DEBUG]     b : 1
[DEBUG]     e : 1
[DEBUG]     f : 1
[DEBUG]     g : 2
[DEBUG]     c : 2
[DEBUG] 
[DEBUG] [f]:
[DEBUG]     f : 0
[DEBUG]     d : 1
[DEBUG]     e : 1
[DEBUG]     g : 1
[DEBUG]     a : 2
[DEBUG]     c : 2
[DEBUG]     b : 2
[DEBUG] 
[DEBUG] [g]:
[DEBUG]     g : 0
[DEBUG]     e : 1
[DEBUG]     f : 1
[DEBUG]     a : 3
[DEBUG]     d : 2
[DEBUG]     c : 2
[DEBUG]     b : 2
[DEBUG] 
[DEBUG] [e]:
[DEBUG]     e : 0
[DEBUG]     f : 1
[DEBUG]     b : 1
[DEBUG]     d : 1
[DEBUG]     g : 1
[DEBUG]     c : 1
[DEBUG]     a : 2
[DEBUG] 
[DEBUG] [c]:
[DEBUG]     c : 0
[DEBUG]     b : 1
[DEBUG]     e : 1
[DEBUG]     a : 2
[DEBUG]     d : 2
[DEBUG]     f : 2
[DEBUG]     g : 2
[DEBUG] 
[DEBUG] [b]:
[DEBUG]     b : 0
[DEBUG]     c : 1
[DEBUG]     a : 1
[DEBUG]     e : 1
[DEBUG]     d : 1
[DEBUG]     f : 2
[DEBUG]     g : 2
[DEBUG] 
[INFO ] Acquiring anchor sets
[INFO ] .. Distance distrubution built
[DEBUG] {"0": [["a", "a"], ["d", "d"], ["f", "f"], ["g", "g"], ["e", "e"], ["c", "c"], ["b", "b"]], "1": [["a", "b"], ["a", "d"], ["b", "d"], ["d", "e"], ["d", "f"], ["e", "f"], ["f", "g"], ["e", "g"], ["b", "e"], ["c", "e"], ["b", "c"]], "2": [["a", "f"], ["a", "e"], ["a", "c"], ["d", "g"], ["c", "d"], ["c", "f"], ["b", "f"], ["c", "g"], ["b", "g"]], "3": [["a", "g"]]}
[DEBUG] SIFTING for 3 anchors at cut off 1
[DEBUG] No anchor sets found
[DEBUG] SIFTING for 3 anchors at cut off 2
[INFO ] .. 3 Anchor sets found:
[INFO ] ['a', 'c', 'f']
[INFO ] ['c', 'd', 'g']
[INFO ] ['a', 'c', 'g']
[INFO ] Iterating anchor sets
[INFO ] Processing anchors ['a', 'c', 'f']
[DEBUG] Tick [ 1 ]
[DEBUG] [a]: ['a']
[DEBUG] [c]: ['c']
[DEBUG] [f]: ['f']
[DEBUG] Split a at 0
[DEBUG] Split c at -1
[DEBUG] Split f at -1
[DEBUG] -   a checks b
[DEBUG] -   a checks d
[DEBUG] -   c checks b
[DEBUG] -   c checks e
[DEBUG] -   f checks d
[DEBUG] -   f checks e
[DEBUG] -   f checks g
[DEBUG] Tick [ 2 ]
[DEBUG] [a]: ['a']
[DEBUG] [c]: ['c']
[DEBUG] [f]: ['f']
[DEBUG] Split a at 1
[DEBUG] Split c at 0
[DEBUG] Split f at 0
[DEBUG] -   a checks b
[DEBUG] a ADDS b
[DEBUG] -   adding e to the prospects of a
[DEBUG] -   a checks d
[DEBUG] -   c checks b
[DEBUG]    -   already claimed
[DEBUG] -   c checks e
[DEBUG] -   f checks d
[DEBUG] -   f checks e
[DEBUG] -   f checks g
[DEBUG] f ADDS g
[DEBUG] Tick [ 3 ]
[DEBUG] [a]: ['a', 'b']
[DEBUG] [c]: ['c']
[DEBUG] [f]: ['f', 'g']
[DEBUG] Split a at 1
[DEBUG] Split c at 1
[DEBUG] Split f at 1
[DEBUG] -   a checks d
[DEBUG] a ADDS d
[DEBUG] -   a checks e
[DEBUG] -   c checks b
[DEBUG]    -   already claimed
[DEBUG] -   c checks e
[DEBUG] c ADDS e
[DEBUG] -   f checks d
[DEBUG]    -   already claimed
[DEBUG] -   f checks e
[DEBUG]    -   already claimed
[INFO ] . Creep completed in 3 ticks
[INFO ] . Start negotiations
[INFO ] . Creating border map
[DEBUG] Border nodes for a: {'c': ['b', 'd'], 'f': ['d']}
[DEBUG] Border nodes for c: {'a': ['c', 'e'], 'f': ['e']}
[DEBUG] Border nodes for f: {'c': ['f', 'g'], 'a': ['f']}
[DEBUG] [['a', 'c'], ['a', 'f'], ['c', 'f']]
[DEBUG] = new negotiations round
[DEBUG] -    a to provide to f to cover diff 2
[DEBUG]     -   No suitable adjustments
[INFO ] a > 5 > ['a', 'b', 'd']
[INFO ] c > 4 > ['c', 'e']
[INFO ] f > 3 > ['f', 'g']
[INFO ] .. Negotiations complete
[INFO ] .. Splits mean deviation 0.6666666666666666 -> provisionally best
[INFO ] Processing anchors ['c', 'd', 'g']
[DEBUG] Tick [ 1 ]
[DEBUG] [c]: ['c']
[DEBUG] [d]: ['d']
[DEBUG] [g]: ['g']
[DEBUG] Split c at -1
[DEBUG] Split d at -1
[DEBUG] Split g at 0
[DEBUG] -   g checks e
[DEBUG] -   g checks f
[DEBUG] -   c checks b
[DEBUG] -   c checks e
[DEBUG] -   d checks a
[DEBUG] -   d checks b
[DEBUG] -   d checks e
[DEBUG] -   d checks f
[DEBUG] Tick [ 2 ]
[DEBUG] [c]: ['c']
[DEBUG] [d]: ['d']
[DEBUG] [g]: ['g']
[DEBUG] Split c at 0
[DEBUG] Split d at 0
[DEBUG] Split g at 1
[DEBUG] -   g checks e
[DEBUG] g ADDS e
[DEBUG] -   adding b to the prospects of g
[DEBUG] -   g checks f
[DEBUG] -   c checks b
[DEBUG] -   c checks e
[DEBUG]    -   already claimed
[DEBUG] -   d checks a
[DEBUG] d ADDS a
[DEBUG] -   d checks b
[DEBUG] -   d checks e
[DEBUG]    -   already claimed
[DEBUG] -   d checks f
[DEBUG] Tick [ 3 ]
[DEBUG] [c]: ['c']
[DEBUG] [d]: ['d', 'a']
[DEBUG] [g]: ['g', 'e']
[DEBUG] Split c at 1
[DEBUG] Split d at 1
[DEBUG] Split g at 1
[DEBUG] -   g checks f
[DEBUG] g ADDS f
[DEBUG] -   g checks b
[DEBUG] -   c checks b
[DEBUG] c ADDS b
[DEBUG] -   c checks e
[DEBUG]    -   already claimed
[DEBUG] -   d checks b
[DEBUG]    -   already claimed
[DEBUG] -   d checks e
[DEBUG]    -   already claimed
[DEBUG] -   d checks f
[DEBUG]    -   already claimed
[INFO ] . Creep completed in 3 ticks
[INFO ] . Start negotiations
[INFO ] . Creating border map
[DEBUG] Border nodes for c: {'g': ['c', 'b'], 'd': ['b']}
[DEBUG] Border nodes for d: {'g': ['d'], 'c': ['d', 'a']}
[DEBUG] Border nodes for g: {'c': ['e'], 'd': ['e', 'f']}
[DEBUG] [['c', 'd'], ['c', 'g'], ['d', 'g']]
[DEBUG] = new negotiations round
[DEBUG] -    g to provide to d to cover diff 2
[DEBUG]     -   No suitable adjustments
[INFO ] c > 4 > ['c', 'b']
[INFO ] d > 3 > ['d', 'a']
[INFO ] g > 5 > ['g', 'e', 'f']
[INFO ] .. Negotiations complete
[INFO ] .. Splits mean deviation 0.6666666666666666
[INFO ] Processing anchors ['a', 'c', 'g']
[DEBUG] Tick [ 1 ]
[DEBUG] [a]: ['a']
[DEBUG] [c]: ['c']
[DEBUG] [g]: ['g']
[DEBUG] Split a at 0
[DEBUG] Split c at -1
[DEBUG] Split g at 0
[DEBUG] -   a checks b
[DEBUG] -   a checks d
[DEBUG] -   g checks e
[DEBUG] -   g checks f
[DEBUG] -   c checks b
[DEBUG] -   c checks e
[DEBUG] Tick [ 2 ]
[DEBUG] [a]: ['a']
[DEBUG] [c]: ['c']
[DEBUG] [g]: ['g']
[DEBUG] Split a at 1
[DEBUG] Split c at 0
[DEBUG] Split g at 1
[DEBUG] -   a checks b
[DEBUG] a ADDS b
[DEBUG] -   adding e to the prospects of a
[DEBUG] -   a checks d
[DEBUG] -   g checks e
[DEBUG] g ADDS e
[DEBUG] -   adding d to the prospects of g
[DEBUG] -   g checks f
[DEBUG] -   c checks b
[DEBUG]    -   already claimed
[DEBUG] -   c checks e
[DEBUG]    -   already claimed
[DEBUG] Tick [ 3 ]
[DEBUG] [a]: ['a', 'b']
[DEBUG] [c]: ['c']
[DEBUG] [g]: ['g', 'e']
[DEBUG] Split a at 1
[DEBUG] Split c at 1
[DEBUG] Split g at 1
[DEBUG] -   a checks d
[DEBUG] a ADDS d
[DEBUG] -   adding f to the prospects of a
[DEBUG] -   a checks e
[DEBUG]    -   already claimed
[DEBUG] -   g checks f
[DEBUG] g ADDS f
[DEBUG] -   g checks d
[DEBUG]    -   already claimed
[DEBUG] -   c checks b
[DEBUG]    -   already claimed
[DEBUG] -   c checks e
[DEBUG]    -   already claimed
[INFO ] . Creep completed in 3 ticks
[INFO ] . Start negotiations
[INFO ] . Creating border map
[DEBUG] Border nodes for a: {'g': ['b', 'd'], 'c': ['b']}
[DEBUG] Border nodes for c: {'g': ['c'], 'a': ['c']}
[DEBUG] Border nodes for g: {'c': ['e'], 'a': ['e', 'f']}
[DEBUG] [['a', 'c'], ['a', 'g'], ['c', 'g']]
[DEBUG] = new negotiations round
[DEBUG] -    a to provide to c to cover diff 3
[DEBUG]     -   No suitable adjustments
[DEBUG] -    g to provide to c to cover diff 3
[DEBUG]     -   No suitable adjustments
[INFO ] a > 5 > ['a', 'b', 'd']
[INFO ] c > 2 > ['c']
[INFO ] g > 5 > ['g', 'e', 'f']
[INFO ] .. Negotiations complete
[INFO ] .. Splits mean deviation 1.3333333333333333
[INFO ] Best anchor set: ['a', 'c', 'f']
[INFO ] Best splits mean deviation : 0.6666666666666666
[INFO ] a (5) :: ['a', 'b', 'd']
[INFO ] c (4) :: ['c', 'e']
[INFO ] f (3) :: ['f', 'g']
[INFO ] Composing split array
[INFO ] .. Split array prepared
[INFO ] 
aac
aac
acc
fff

[INFO ] TOTAL TIME: 0:00:08.128845 s
